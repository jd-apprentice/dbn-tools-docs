{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\ud83d\udcbe Home \ud83d\udcbb With dbn-tools, you can: \ud83d\udd0d Analyze disk usage and see which files and directories are taking up the most space. \ud83d\uddd1\ufe0f Delete temporary files and free up space on your hard drive. \ud83d\udcbe Check the usage of your system's RAM and swap memory. \ud83e\uddf0 Get detailed information about your CPU and system. \ud83d\uddd1\ufe0f Empty the recycle bin to permanently delete files. \ud83c\udf27\ufe0f Check weather for you current location. \ud83e\uddf9 Uninstall programs you no longer need. \ud83d\udcb5 Check local rate for USD-ARS. \ud83d\udd0d Search for a specific file. \ud83c\udf4e Download youtube videos. \ud83d\udd70\ufe0f Check the system uptime. \ud83d\udd12 Check open ports. \ud83d\udcbe Can I download the app? Yes! releases are being published -> HERE Check compatibility for your distro or look at the INSTALL for detailed instructions \ud83c\udf21 Want to see our metrics? We use codacy here is the DASHBOARD \ud83d\udca1 Ideas New ideas are being tracked and added in this issue -> Here \ud83d\udcbe Compatibility Docker \u2705 Ubuntu 22.04 \u2705 Debian 11 \u2705 Arch \u2705 Fedora \u274c Centos \u274c Gentoo \u274c openSUSE \u274c Slackware \u274c \ud83c\udff3\ufe0f Flags --help : \ud83d\udcdc Display a help message with a list of all available options. --system : \ud83d\udda5 Filters the menu to only show system utility options. --esp : \ud83c\uddea\ud83c\uddf8 Enable Spanish translation (WIP). \ud83d\udcc1 Application \ud83d\udcc1 Folder structure \ud83d\udce6dbn-tools \u2523 \ud83d\udcc2.github \u2503 \u2517 \ud83d\udcc2workflows \u2503 \u2503 \u2517 \ud83d\udcdccodacy.yml \u2523 \ud83d\udcc2DEBIAN \u2503 \u2523 \ud83d\udcdccontrol \u2523 \ud83d\udcc2usr \u2503 \u2517 \ud83d\udcc2bin \u2503 \u2503 \u2523 \ud83d\udcc2constants \u2503 \u2503 \u2503 \u2523 \ud83d\udcdcascii.sh \u2503 \u2503 \u2523 \ud83d\udcc2functions \u2503 \u2503 \u2503 \u2523 \ud83d\udcdcdelete-temp.sh \u2503 \u2503 \u2517 \ud83d\udcdcdbn-tools.sh \u2523 \ud83d\udcc2utils \u2503 \u2523 \ud83d\udcdcbuild_new_version.sh \u2523 \ud83d\udcdc.gitignore \u2523 \ud83d\udcdcCONTRIBUTE.md \u2523 \ud83d\udcdcDockerfile \u2523 \ud83d\udcdcINSTALL.md \u2523 \ud83d\udcdcLICENSE \u2523 \ud83d\udcdcREADME.md \u2517 \ud83d\udcdcreadme.png \ud83d\udcc1 Dependencies Bash Git Debtap (Arch) Python 3 \ud83d\udc0d Python dependencies Requests \ud83d\udc1b Troubleshot For more information, check the TROUBLESHOT file \ud83c\udf34 Environment variables Variable Description DOWNLOAD_URL URL to download a package get it from here -> https://github.com/jd-apprentice/dbn-tools/tags PACKAGE_NAME Name of the package being downloaded (is the name of the file from the other variable) \ud83d\udcc1 Install You can see how to install it in the following file INSTALL . \ud83d\udcdd License This project is under the MIT license. See the LICENSE for more information. \ud83e\udd1d Contributing For more information, check the CONTRIBUTING file \u2728 Contributors Thanks goes to these wonderful people ( emoji key ): Jonathan Dyallo \ud83d\udcbb \u26a0\ufe0f \ud83d\udcd6 \ud83d\udea7 This project follows the all-contributors specification. Contributions of any kind welcome!","title":"\ud83d\udcbe Home"},{"location":"#home","text":"","title":"\ud83d\udcbe Home"},{"location":"#with-dbn-tools-you-can","text":"\ud83d\udd0d Analyze disk usage and see which files and directories are taking up the most space. \ud83d\uddd1\ufe0f Delete temporary files and free up space on your hard drive. \ud83d\udcbe Check the usage of your system's RAM and swap memory. \ud83e\uddf0 Get detailed information about your CPU and system. \ud83d\uddd1\ufe0f Empty the recycle bin to permanently delete files. \ud83c\udf27\ufe0f Check weather for you current location. \ud83e\uddf9 Uninstall programs you no longer need. \ud83d\udcb5 Check local rate for USD-ARS. \ud83d\udd0d Search for a specific file. \ud83c\udf4e Download youtube videos. \ud83d\udd70\ufe0f Check the system uptime. \ud83d\udd12 Check open ports.","title":"\ud83d\udcbb With dbn-tools, you can:"},{"location":"#can-i-download-the-app","text":"Yes! releases are being published -> HERE Check compatibility for your distro or look at the INSTALL for detailed instructions","title":"\ud83d\udcbe Can I download the app?"},{"location":"#want-to-see-our-metrics","text":"We use codacy here is the DASHBOARD","title":"\ud83c\udf21 Want to see our metrics?"},{"location":"#ideas","text":"New ideas are being tracked and added in this issue -> Here","title":"\ud83d\udca1 Ideas"},{"location":"#compatibility","text":"Docker \u2705 Ubuntu 22.04 \u2705 Debian 11 \u2705 Arch \u2705 Fedora \u274c Centos \u274c Gentoo \u274c openSUSE \u274c Slackware \u274c","title":"\ud83d\udcbe Compatibility"},{"location":"#flags","text":"--help : \ud83d\udcdc Display a help message with a list of all available options. --system : \ud83d\udda5 Filters the menu to only show system utility options. --esp : \ud83c\uddea\ud83c\uddf8 Enable Spanish translation (WIP).","title":"\ud83c\udff3\ufe0f Flags"},{"location":"#application","text":"","title":"\ud83d\udcc1 Application"},{"location":"#folder-structure","text":"\ud83d\udce6dbn-tools \u2523 \ud83d\udcc2.github \u2503 \u2517 \ud83d\udcc2workflows \u2503 \u2503 \u2517 \ud83d\udcdccodacy.yml \u2523 \ud83d\udcc2DEBIAN \u2503 \u2523 \ud83d\udcdccontrol \u2523 \ud83d\udcc2usr \u2503 \u2517 \ud83d\udcc2bin \u2503 \u2503 \u2523 \ud83d\udcc2constants \u2503 \u2503 \u2503 \u2523 \ud83d\udcdcascii.sh \u2503 \u2503 \u2523 \ud83d\udcc2functions \u2503 \u2503 \u2503 \u2523 \ud83d\udcdcdelete-temp.sh \u2503 \u2503 \u2517 \ud83d\udcdcdbn-tools.sh \u2523 \ud83d\udcc2utils \u2503 \u2523 \ud83d\udcdcbuild_new_version.sh \u2523 \ud83d\udcdc.gitignore \u2523 \ud83d\udcdcCONTRIBUTE.md \u2523 \ud83d\udcdcDockerfile \u2523 \ud83d\udcdcINSTALL.md \u2523 \ud83d\udcdcLICENSE \u2523 \ud83d\udcdcREADME.md \u2517 \ud83d\udcdcreadme.png","title":"\ud83d\udcc1 Folder structure"},{"location":"#dependencies","text":"Bash Git Debtap (Arch) Python 3","title":"\ud83d\udcc1 Dependencies"},{"location":"#python-dependencies","text":"Requests","title":"\ud83d\udc0d Python dependencies"},{"location":"#troubleshot","text":"For more information, check the TROUBLESHOT file","title":"\ud83d\udc1b Troubleshot"},{"location":"#environment-variables","text":"Variable Description DOWNLOAD_URL URL to download a package get it from here -> https://github.com/jd-apprentice/dbn-tools/tags PACKAGE_NAME Name of the package being downloaded (is the name of the file from the other variable)","title":"\ud83c\udf34 Environment variables"},{"location":"#install","text":"You can see how to install it in the following file INSTALL .","title":"\ud83d\udcc1 Install"},{"location":"#license","text":"This project is under the MIT license. See the LICENSE for more information.","title":"\ud83d\udcdd License"},{"location":"#contributing","text":"For more information, check the CONTRIBUTING file","title":"\ud83e\udd1d Contributing"},{"location":"#contributors","text":"Thanks goes to these wonderful people ( emoji key ): Jonathan Dyallo \ud83d\udcbb \u26a0\ufe0f \ud83d\udcd6 \ud83d\udea7 This project follows the all-contributors specification. Contributions of any kind welcome!","title":"\u2728 Contributors"},{"location":"ABOUT/","text":"\u2753About the team \ud83d\udc68\u200d\ud83e\uddb1 jd-apprentice Role: Software Developer Bio: I'm a software developer from Argentina who enjoys backend development and working with the Linux environment.","title":"\u2753About the team"},{"location":"ABOUT/#about-the-team","text":"","title":"\u2753About the team"},{"location":"ABOUT/#jd-apprentice","text":"Role: Software Developer Bio: I'm a software developer from Argentina who enjoys backend development and working with the Linux environment.","title":"\ud83d\udc68\u200d\ud83e\uddb1 jd-apprentice"},{"location":"CONTRIBUTING/","text":"\ud83e\udd1d Contribute Fork the project Create a new branch with your changes: git checkout -b feature/my-feature For a fix or suggestion, create a new branch with your changes: git checkout -b fix/my-fix Save your changes and create a commit message telling you what you did: git commit -m \"feature: My new feature\" Submit your changes: git push origin feature/my-feature Open a pull request with your branch After the merge of your pull request is done, you can delete your branch If you have any questions, please contact me at email \ud83d\udcdd Build a new version If you are going to change a few things and want to build it to test if it works fine, you can build a new version yourself with the script inside the utils folder called build_new_version.sh Remember to not include anything git related Don't include anything sensitive \ud83d\udcdd Notes to remember When you are working locally you don't use absolute paths for example /usr/bin/functions since that one is going to be the final one for when the package is installed, instead you use usr/bin/functions since is part of the folder you are working on \ud83d\udd0d What language should I use? Languages accepted at the moment are python and bash, if I find more ways to implement new ones for example javascript I will accept them, for now I'll go with what I consider stable","title":"\ud83e\udd1d Contribute"},{"location":"CONTRIBUTING/#contribute","text":"Fork the project Create a new branch with your changes: git checkout -b feature/my-feature For a fix or suggestion, create a new branch with your changes: git checkout -b fix/my-fix Save your changes and create a commit message telling you what you did: git commit -m \"feature: My new feature\" Submit your changes: git push origin feature/my-feature Open a pull request with your branch After the merge of your pull request is done, you can delete your branch If you have any questions, please contact me at email","title":"\ud83e\udd1d Contribute"},{"location":"CONTRIBUTING/#build-a-new-version","text":"If you are going to change a few things and want to build it to test if it works fine, you can build a new version yourself with the script inside the utils folder called build_new_version.sh Remember to not include anything git related Don't include anything sensitive","title":"\ud83d\udcdd Build a new version"},{"location":"CONTRIBUTING/#notes-to-remember","text":"When you are working locally you don't use absolute paths for example /usr/bin/functions since that one is going to be the final one for when the package is installed, instead you use usr/bin/functions since is part of the folder you are working on","title":"\ud83d\udcdd Notes to remember"},{"location":"CONTRIBUTING/#what-language-should-i-use","text":"Languages accepted at the moment are python and bash, if I find more ways to implement new ones for example javascript I will accept them, for now I'll go with what I consider stable","title":"\ud83d\udd0d What language should I use?"},{"location":"INSTALL/","text":"\ud83d\udca1 Installation \ud83d\udc0b Docker Clone the repository and make sure to be in the same folder as the Dockerfile which is in the root Go check the latest release from TAGS Copy the deb link for example https://github.com/jd-apprentice/dbn-tools/releases/download/0.0.5/0.5-dbn-tools.deb Copy the name file in this case 0.5-dbn-tools.deb Then we can build our container with docker compose up -d Once the container is running we can go inside with docker exec -it dbn-tools-container bash And for the last part we can run the app with dbn_tools \ud83d\udd2c Troubleshot The container may not be working and if you try it to see the logs you see dbn-tools command not found ? That may indicated that is neccesary to build it run the following command -> dokcer compose up --build Once it reaches the end you can do ctrl + c to exit and run again docker compose up -d and docker exec -it dbn-tools-container bash \ud83e\udd0e Ubuntu Tested on Ubuntu 22.04 Download the .deb package from the repository. Install the package using the command sudo dpkg -i dbn-tools.deb . Run the package by typing dbn-tools in the terminal. \ud83c\udf4e Debian Tested on Debian 11 Download the .deb package from the repository. Repack the package running the script in the utils called debian_builder.sh . Remember to give permissions to the package with chmod +x ./debian_builder.sh Run the script with the path to the .deb file for example ./debian_builder.sh $HOME/Downloads/dbn-tools.deb Install the debian_repacked.deb package with sudo dpkg -i debian_repacked.deb Run the package by typing dbn-tools in the terminal \ud83c\udde6 Arch Tested on Kernel 6.0.2 Download the .deb package from the repository. Install debtap with yay -S debtap Update the database with sudo debtap -u Build the package with debtap <path-to-package> Once we have the tar.zst file we are going to install it with pacman Run sudo pacman -U <path-to-tar-zst-file> Run the package by typing dbn-tools in the terminal","title":"\ud83d\udca1 Installation"},{"location":"INSTALL/#installation","text":"","title":"\ud83d\udca1 Installation"},{"location":"INSTALL/#docker","text":"Clone the repository and make sure to be in the same folder as the Dockerfile which is in the root Go check the latest release from TAGS Copy the deb link for example https://github.com/jd-apprentice/dbn-tools/releases/download/0.0.5/0.5-dbn-tools.deb Copy the name file in this case 0.5-dbn-tools.deb Then we can build our container with docker compose up -d Once the container is running we can go inside with docker exec -it dbn-tools-container bash And for the last part we can run the app with dbn_tools","title":"\ud83d\udc0b Docker"},{"location":"INSTALL/#troubleshot","text":"The container may not be working and if you try it to see the logs you see dbn-tools command not found ? That may indicated that is neccesary to build it run the following command -> dokcer compose up --build Once it reaches the end you can do ctrl + c to exit and run again docker compose up -d and docker exec -it dbn-tools-container bash","title":"\ud83d\udd2c Troubleshot"},{"location":"INSTALL/#ubuntu","text":"Tested on Ubuntu 22.04 Download the .deb package from the repository. Install the package using the command sudo dpkg -i dbn-tools.deb . Run the package by typing dbn-tools in the terminal.","title":"\ud83e\udd0e Ubuntu"},{"location":"INSTALL/#debian","text":"Tested on Debian 11 Download the .deb package from the repository. Repack the package running the script in the utils called debian_builder.sh . Remember to give permissions to the package with chmod +x ./debian_builder.sh Run the script with the path to the .deb file for example ./debian_builder.sh $HOME/Downloads/dbn-tools.deb Install the debian_repacked.deb package with sudo dpkg -i debian_repacked.deb Run the package by typing dbn-tools in the terminal","title":"\ud83c\udf4e Debian"},{"location":"INSTALL/#arch","text":"Tested on Kernel 6.0.2 Download the .deb package from the repository. Install debtap with yay -S debtap Update the database with sudo debtap -u Build the package with debtap <path-to-package> Once we have the tar.zst file we are going to install it with pacman Run sudo pacman -U <path-to-tar-zst-file> Run the package by typing dbn-tools in the terminal","title":"\ud83c\udde6 Arch"},{"location":"TROUBLESHOT/","text":"\ud83c\udf20 Troubleshot \ud83d\udeab Requests module not found Traceback (most recent call last): File \"/usr/bin/functions/usd-ars.py\", line 4, in <module> import requests ModuleNotFoundError: No module named 'requests' We can make sure we have requests in our system with the following command: pip3 show requests If we don't have it, we can install it with the following command: pip3 install requests==2.28.2 In case you don't have pip3 installed, you can install it with the following command: sudo apt install python3-dev=3.10.6-1~22.04 python3-pip=22.0.2+dfsg-1ubuntu0.1 Then we can do the same as before: pip3 install requests==2.28.2 \\ yt-dlp==2023.1.6 Then we may have to reboot the system to make sure the changes are applied.","title":"\ud83c\udf20 Troubleshot"},{"location":"TROUBLESHOT/#troubleshot","text":"","title":"\ud83c\udf20 Troubleshot"},{"location":"TROUBLESHOT/#requests-module-not-found","text":"Traceback (most recent call last): File \"/usr/bin/functions/usd-ars.py\", line 4, in <module> import requests ModuleNotFoundError: No module named 'requests' We can make sure we have requests in our system with the following command: pip3 show requests If we don't have it, we can install it with the following command: pip3 install requests==2.28.2 In case you don't have pip3 installed, you can install it with the following command: sudo apt install python3-dev=3.10.6-1~22.04 python3-pip=22.0.2+dfsg-1ubuntu0.1 Then we can do the same as before: pip3 install requests==2.28.2 \\ yt-dlp==2023.1.6 Then we may have to reboot the system to make sure the changes are applied.","title":"\ud83d\udeab Requests module not found"}]}